name: Pull request stage testing staging

on:
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize

permissions:
  pull-requests: write
  id-token: write
  contents: read
  issues: write

defaults:
  run:
    shell: bash

jobs:
  lint-and-test_staging:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3.1.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Python 3.9
        uses: actions/setup-python@v4.3.0
        with:
          python-version: 3.9

      - name: Install pip
        run: |
          set +e
          set +o pipefail
          apt-get update && apt-get -y upgrade
          apt-get install -y wget software-properties-common
          add-apt-repository ppa:deadsnakes/ppa
          apt-get install -y python3-distutils python3.9
          apt-get purge python-pip
          ln -sf python3 /usr/bin/python
          wget -q https://bootstrap.pypa.io/get-pip.py
          python /get-pip.py
          python -m pip install --upgrade pip
          rm -f /get-pip.py
        continue-on-error: false

      - name: Install TFLint
        uses: terraform-linters/setup-tflint@v2.0.1
        with:
          tflint_version: v0.38.1
        continue-on-error: false

      - name: Run TFLint
        id: run_tflint
        run: |
          tflint --init
          tflint -f compact --loglevel warn

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        continue-on-error: false

      - name: Get Staging AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-region: eu-west-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        continue-on-error: false

      - name: Terraform init Staging
        id: run_tf_init_staging
        run: |
          set +e
          set +o pipefail
          terraform init -upgrade -input=false -backend-config="bucket=tna-terraform-backend-state-enrichment-pipeline-${{ secrets.STAGING_ACCOUNT_ID}}"
        continue-on-error: false

      - name: TF Validate
        id: run_tf_validate
        run: |
          set +e
          set +o pipefail
          terraform validate -no-color
        continue-on-error: false

      - name: Terraform Plan Staging
        id: run_tf_plan_staging
        run: |
          set +e
          set +o pipefail
          terraform workspace select tna-staging
          terraform plan -no-color -var "app_env=staging"
