on:
  workflow_call:
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      account_id:
        required: true
      workspace:
        required: true
      app_env:
        required: true

jobs:
  deploy_single_environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3.1.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Python 3.9
        uses: actions/setup-python@v4.3.0
        with:
          python-version: 3.9

      - name: Get AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: eu-west-2
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
        continue-on-error: false

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        continue-on-error: false

      - name: Terraform init
        run: |
          set -e
          set -o pipefail
          cd terraform
          terraform init -upgrade -input=false -backend-config="bucket=tna-terraform-backend-state-enrichment-pipeline-${{ secrets.account_id }}"
          terraform workspace list
        continue-on-error: false

      - name: Terraform Apply
        env:
          TF_VAR_error_alert_emails: ${{ vars.TF_VAR_ERROR_ALERT_EMAILS }}
          TF_LOG: "DEBUG"
        run: |
          echo "THE TF_VAR_error_alert_emails IS:\n\n=================="
          echo ${{ env.TF_VAR_error_alert_emails }}
          echo "=======\n\n\n==========\nDID YOU SEE IT???\n============"
          set -e
          set -o pipefail
          cd terraform
          terraform workspace select ${{ secrets.workspace }}
          terraform apply -refresh-only --auto-approve -no-color -var "app_env=${{ secrets.app_env }}"
          terraform apply --auto-approve -no-color -var "app_env=${{ secrets.app_env }}"
