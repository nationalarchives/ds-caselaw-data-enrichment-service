on:
  workflow_call:
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      account_id:
        required: true
      workspace:
        required: true
      app_env:
        required: true

jobs:
  deploy_single_environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3.1.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Python 3.9
        uses: actions/setup-python@v4.3.0
        with:
          python-version: 3.9

      - name: Get AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: eu-west-2
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
        continue-on-error: false

      - name: Buildx
        uses: docker/setup-buildx-action@v2.2.1
        with:
          install: true

      - name: Assemble Non-Dockerised Lambda
        run: |
          set +e
          set +o pipefail
          mkdir lambda/determine_replacements_caselaw/caselaw_extraction
          cp -r caselaw_extraction/*.py lambda/determine_replacements_caselaw/caselaw_extraction/
          cp caselaw_extraction/requirements.txt lambda/determine_replacements_caselaw/requirements.txt
          mkdir lambda/determine_replacements_caselaw/rules
          # cp caselaw_extraction/rules/citation_patterns.jsonl lambda/determine_replacements_caselaw/rules/citation_patterns.jsonl
          cp citation_patterns.jsonl lambda/determine_replacements_caselaw/
          mkdir lambda/determine_replacements_caselaw/database
          cp -r database/*.py lambda/determine_replacements_caselaw/database/
          mkdir lambda/determine_replacements_caselaw/utils
          cp -r utils/*.py lambda/determine_replacements_caselaw/utils/
          mkdir lambda/determine_replacements_legislation/legislation_extraction
          cp -r legislation_extraction/*.* lambda/determine_replacements_legislation/legislation_extraction/
          cp legislation_extraction/requirements.txt lambda/determine_replacements_legislation/
          mkdir lambda/determine_replacements_legislation/utils
          cp -r utils/*.py lambda/determine_replacements_legislation/utils/
          mkdir lambda/determine_replacements_legislation/database
          cp -r database/*.py lambda/determine_replacements_legislation/database/
          mkdir lambda/determine_replacements_abbreviations/abbreviation_extraction
          cp -r abbreviation_extraction/*.* lambda/determine_replacements_abbreviations/abbreviation_extraction/
          cp abbreviation_extraction/requirements.txt lambda/determine_replacements_abbreviations/
          mkdir lambda/determine_legislation_provisions/legislation_provisions_extraction
          cp -r legislation_provisions_extraction/*.* lambda/determine_legislation_provisions/legislation_provisions_extraction/
          cp legislation_provisions_extraction/requirements.txt lambda/determine_legislation_provisions/
          mkdir lambda/determine_legislation_provisions/replacer
          cp -r replacer/*.py lambda/determine_legislation_provisions/replacer/
          mkdir lambda/determine_oblique_references/oblique_references
          cp -r oblique_references/*.* lambda/determine_oblique_references/oblique_references/
          cp oblique_references/requirements.txt lambda/determine_oblique_references/
          mkdir lambda/determine_oblique_references/replacer
          cp -r replacer/*.py lambda/determine_oblique_references/replacer/
          mkdir lambda/extract_judgement_contents/utils
          cp -r utils/*.py lambda/extract_judgement_contents/utils/
          mkdir -p lambda/make_replacements/replacer
          cp -r replacer/*.py lambda/make_replacements/replacer/

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        continue-on-error: false

      - name: Terraform init
        run: |
          set +e
          set +o pipefail
          terraform init -upgrade -input=false -backend-config="bucket=tna-terraform-backend-state-enrichment-pipeline-${{ secrets.account_id }}"
          terraform workspace list
        continue-on-error: false

      - name: Terraform Apply
        run: |
          set +e
          set +o pipefail
          terraform workspace select ${{ secrets.workspace }}
          terraform apply -refresh-only --auto-approve -no-color -var "app_env=${{ secrets.app_env }}"
          terraform apply --auto-approve -no-color -var "app_env=${{ secrets.app_env }}"

      # Pushing images to ECR last
      - name: Build Docker Images For Lambda
        run: |
          set +e
          set +o pipefail
          cd "lambda/determine_replacements_caselaw"
          aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com
          docker buildx build --load -t tna-s3-tna-ecr-repository-{{ secrets.app_env }} .
          echo "finished buildx"
          docker tag tna-s3-tna-ecr-repository-{{ secrets.app_env }}:latest ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-{{ secrets.app_env }}:latest
          echo "finished docker tag"
          docker push ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-{{ secrets.app_env }}:latest
          echo "finished pushing docker image"
          cd "${GITHUB_WORKSPACE}"

          cd "lambda/determine_replacements_legislation"
          docker buildx build --load -t tna-s3-tna-ecr-repository-legislation-{{ secrets.app_env }} .
          docker tag tna-s3-tna-ecr-repository-legislation-{{ secrets.app_env }}:latest ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-legislation-{{ secrets.app_env }}:latest
          docker push ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-legislation-{{ secrets.app_env }}:latest
          cd "${GITHUB_WORKSPACE}"

          cd "lambda/determine_replacements_abbreviations"
          docker buildx build --load -t tna-s3-tna-ecr-repository-abbreviations-{{ secrets.app_env }} .
          docker tag tna-s3-tna-ecr-repository-abbreviations-{{ secrets.app_env }}:latest ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-abbreviations-{{ secrets.app_env }}:latest
          docker push ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-abbreviations-{{ secrets.app_env }}:latest
          cd "${GITHUB_WORKSPACE}"

          cd "lambda/update_legislation_table"
          docker buildx build --load -t tna-s3-tna-ecr-repository-legislation-update-{{ secrets.app_env }} .
          docker tag tna-s3-tna-ecr-repository-legislation-update-{{ secrets.app_env }}:latest ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-legislation-update-{{ secrets.app_env }}:latest
          docker push ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-legislation-update-{{ secrets.app_env }}:latest
          cd "${GITHUB_WORKSPACE}"

          cd "lambda/update_rules_processor"
          docker buildx build --load -t tna-s3-tna-ecr-repository-rules-update-{{ secrets.app_env }} .
          docker tag tna-s3-tna-ecr-repository-rules-update-{{ secrets.app_env }}:latest ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-rules-update-{{ secrets.app_env }}:latest
          docker push ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-rules-update-{{ secrets.app_env }}:latest
          cd "${GITHUB_WORKSPACE}"

          cd "lambda/determine_legislation_provisions"
          docker buildx build --load -t tna-s3-tna-ecr-repository-legislation-provision-{{ secrets.app_env }} .
          docker tag tna-s3-tna-ecr-repository-legislation-provision-{{ secrets.app_env }}:latest ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-legislation-provision-{{ secrets.app_env }}:latest
          docker push ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-legislation-provision-{{ secrets.app_env }}:latest
          cd "${GITHUB_WORKSPACE}"

          cd "lambda/determine_oblique_references"
          docker buildx build --load -t tna-s3-tna-ecr-repository-oblique-references-{{ secrets.app_env }} .
          docker tag tna-s3-tna-ecr-repository-oblique-references-{{ secrets.app_env }}:latest ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-oblique-references-{{ secrets.app_env }}:latest
          docker push ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-oblique-references-{{ secrets.app_env }}:latest
          cd "${GITHUB_WORKSPACE}"

          cd "lambda/fetch_xml"
          docker buildx build --load -t tna-s3-tna-ecr-repository-fetch-xml-{{ secrets.app_env }} .
          docker tag tna-s3-tna-ecr-repository-fetch-xml-{{ secrets.app_env }}:latest ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-fetch-xml-{{ secrets.app_env }}:latest
          docker push ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-fetch-xml-{{ secrets.app_env }}:latest
          cd "${GITHUB_WORKSPACE}"

          cd "lambda/push_enriched_xml"
          docker buildx build --load -t tna-s3-tna-ecr-repository-push-enriched-xml-{{ secrets.app_env }} .
          docker tag tna-s3-tna-ecr-repository-push-enriched-xml-{{ secrets.app_env }}:latest ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-push-enriched-xml-{{ secrets.app_env }}:latest
          docker push ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-push-enriched-xml-{{ secrets.app_env }}:latest
          cd "${GITHUB_WORKSPACE}"

          cd "lambda/db_backup"
          docker buildx build --load -t tna-s3-tna-ecr-repository-db-backup-{{ secrets.app_env }} .
          docker tag tna-s3-tna-ecr-repository-db-backup-{{ secrets.app_env }}:latest ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-db-backup-{{ secrets.app_env }}:latest
          docker push ${{ secrets.account_id }}.dkr.ecr.eu-west-2.amazonaws.com/tna-s3-tna-ecr-repository-db-backup-{{ secrets.app_env }}:latest
          cd "${GITHUB_WORKSPACE}"
